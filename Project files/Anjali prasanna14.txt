# Save the full model as a .keras archive
model.save('grainpalette_model.keras')
# Save in SavedModel directory format
model.save('saved_model/grainpalette')
# Save as an HDF5 file
model.save('grainpalette_model.h5')
import tensorflow as tf
# Load from .keras archive
model = tf.keras.models.load_model('grainpalette_model.keras')

# Or load from SavedModel directory
# model = tf.keras.models.load_model('saved_model/grainpalette')

# Or load from H5 file
# model = tf.keras.models.load_model('grainpalette_model.h5')

# Verify
model.summary()
loss, acc = model.evaluate(test_generator)
print(f'Restored model accuracy: {acc*100:.2f}%')
import tensorflow as tf
# Load from .keras archive
model = tf.keras.models.load_model('grainpalette_model.keras')

# Or load from SavedModel directory
# model = tf.keras.models.load_model('saved_model/grainpalette')

# Or load from H5 file
# model = tf.keras.models.load_model('grainpalette_model.h5')

# Verify
model.summary()
loss, acc = model.evaluate(test_generator)
print(f'Restored model accuracy: {acc*100:.2f}%')
json_str = model.to_json()
with open('model_architecture.json','w') as f:
    f.write(json_str)
model.save_weights('grainpalette_weights.h5')
