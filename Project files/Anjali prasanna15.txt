import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image

# Load the trained model
model = tf.keras.models.load_model('grainpalette_final.keras')
class_names = ['Arborio','Basmati','Ipsala','Jasmine','Karacadag']

st.title("üçö GrainPalette Rice-Type Classifier")
st.write("Upload an image of a rice grain to predict its variety.")

uploaded = st.file_uploader("Choose a rice grain image", type=['jpg','png','jpeg'])
if uploaded:
    img = Image.open(uploaded).resize((224,224))
    st.image(img, caption="Uploaded Image")
    arr = np.array(img)/255.0
    arr = np.expand_dims(arr, axis=0)

    if st.button("Classify"):
        preds = model.predict(arr)[0]
        idx = np.argmax(preds)
        st.write(f"**Prediction:** {class_names[idx]}  ‚Äî  Confidence: {preds[idx]*100:.2f}%")
streamlit run app.py
from flask import Flask, request, jsonify
import tensorflow as tf
import numpy as np
from PIL import Image
import io

app = Flask(__name__)
model = tf.keras.models.load_model('grainpalette_final.keras')
class_names = ['Arborio','Basmati','Ipsala','Jasmine','Karacadag']

@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'No file part'}), 400
    file = request.files['file']
    img = Image.open(io.BytesIO(file.read())).resize((224,224))
    arr = np.expand_dims(np.array(img)/255.0, axis=0)
    preds = model.predict(arr)[0]
    idx = np.argmax(preds)
    return jsonify({
        'prediction': class_names[idx],
        'confidence': float(preds[idx])
    })

if __name__ == '__main__':
    app.run(debug=True)
